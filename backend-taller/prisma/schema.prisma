// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  password  String
  rol       String   // admin, mecanico, recepcion
  createdAt DateTime @default(now())
}

model Cliente {
  id        Int        @id @default(autoincrement())
  nombre    String
  telefono  String
  email     String
  direccion String
  createdAt DateTime   @default(now())

  vehiculos Vehiculo[]
}

model Vehiculo {
  id         Int           @id @default(autoincrement())
  marca      String
  modelo     String
  anio       Int
  placa      String        @unique
  color      String
  clienteId  Int
  createdAt  DateTime      @default(now())

  cliente    Cliente       @relation(fields: [clienteId], references: [id])
  ordenes    OrdenTrabajo[]
}

model OrdenTrabajo {
  id               Int                  @id @default(autoincrement())
  fecha            DateTime             @default(now())
  fechaSalida      DateTime?
  descripcion      String
  estado           String
  vehiculoId       Int
  facturaId        Int?

  vehiculo         Vehiculo             @relation(fields: [vehiculoId], references: [id])
  factura          Factura?             @relation(fields: [facturaId], references: [id])
  detalles         DetalleOrdenTrabajo[]
  repuestos        OrdenRepuesto[]
  detalleFacturas  DetalleFactura[]
}

model OrdenRepuesto {
  id             Int             @id @default(autoincrement())
  ordenId        Int
  descripcion    String
  cantidad       Int             @default(1)
  precioUnitario Decimal         @db.Decimal(10,2)
  costoUnitario  Decimal         @db.Decimal(10,2)

  orden          OrdenTrabajo    @relation(fields: [ordenId], references: [id])
}

model Puesto {
  id           Int         @id @default(autoincrement())
  nombre       String
  departamento String
  descripcion  String?

  empleados    Empleado[]
}

model Empleado {
  id         Int                    @id @default(autoincrement())
  nombre     String
  telefono   String?
  cargo      String
  salario    Decimal               @db.Decimal(10,2)
  puestoId   Int

  puesto     Puesto                @relation(fields: [puestoId], references: [id])
  servicios  DetalleOrdenTrabajo[]
}

model DetalleOrdenTrabajo {
  id              Int           @id @default(autoincrement())
  ordenTrabajoId  Int
  empleadoId      Int?
  descripcion     String
  cantidad        Int
  precioUnitario  Decimal       @db.Decimal(10,2)
  costoUnitario   Decimal?      @db.Decimal(10,2)

  ordenTrabajo    OrdenTrabajo  @relation(fields: [ordenTrabajoId], references: [id])
  empleado        Empleado?     @relation(fields: [empleadoId], references: [id])
}

model Factura {
  id           Int               @id @default(autoincrement())
  pagoId       Int?
  fechaEmision DateTime
  descuento    Decimal           @db.Decimal(10,2)
  estado       String
  total        Decimal           @db.Decimal(10,2)

  pago         Pago?             @relation(fields: [pagoId], references: [id])
  ordenes      OrdenTrabajo[]
  detalles     DetalleFactura[]
}

model Pago {
  id         Int                @id @default(autoincrement())
  monto      Decimal            @db.Decimal(10,2)
  fechaPago  DateTime
  metodoPago String

  factura    Factura[]
  detalles   DetalleFactura[]
}

model DetalleFactura {
  id             Int             @id @default(autoincrement())
  facturaId      Int
  pagoId         Int?
  ordenId        Int
  cantidad       Int
  precioUnitario Decimal         @db.Decimal(10,2)
  subtotal       Decimal         @db.Decimal(10,2)

  factura        Factura         @relation(fields: [facturaId], references: [id])
  pago           Pago?           @relation(fields: [pagoId], references: [id])
  orden          OrdenTrabajo    @relation(fields: [ordenId], references: [id])
}